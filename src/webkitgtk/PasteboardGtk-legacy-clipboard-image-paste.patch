commit f2431cf0feb81135c07e6a22db5a100b4faadc4a
Author: ttyS3 <ttys3.rust@gmail.com>
Date:   2024-09-25 02:06:22 +0000

    PasteboardGtk-legacy-clipboard-image-paste.patch

diff --git a/Source/WebCore/platform/gtk/PasteboardGtk.cpp b/Source/WebCore/platform/gtk/PasteboardGtk.cpp
index cb63fc7c..084e90da 100644
--- a/Source/WebCore/platform/gtk/PasteboardGtk.cpp
+++ b/Source/WebCore/platform/gtk/PasteboardGtk.cpp
@@ -328,9 +328,30 @@ void Pasteboard::read(PasteboardFileReader& reader, std::optional<size_t> index)
 
     if (!index) {
         auto filePaths = platformStrategies()->pasteboardStrategy()->readFilePathsFromClipboard(m_name);
-        for (const auto& filePath : filePaths)
+        for (const auto& filePath : filePaths) {
+            WTFLogAlways("xxoo Pasteboard::read readFilePathsFromClipboard reader.readFilename filePath=%s", filePath.utf8().data());
             reader.readFilename(filePath);
-        return;
+        }
+
+        if (!filePaths.isEmpty()) {
+            return;
+        }
+
+        WTFLogAlways("xxoo Pasteboard::read readFilePathsFromClipboard got no filePaths, try readBufferFromClipboard pasteboardName=%s", m_name.utf8().data());
+
+        auto types = platformStrategies()->pasteboardStrategy()->types(m_name);
+        static const ASCIILiteral imageTypes[] = { "image/png"_s, "image/jpeg"_s, "image/gif"_s, "image/bmp"_s, "image/vnd.microsoft.icon"_s, "image/x-icon"_s };
+        for (const auto& imageType : imageTypes) {
+            if (types.contains(imageType)) {
+                WTFLogAlways("xxoo Pasteboard::read readBufferFromClipboard types contains imageType=%s", imageType);
+                auto buffer = platformStrategies()->pasteboardStrategy()->readBufferFromClipboard(m_name, imageType);
+                if (!buffer->isEmpty()) {
+                    reader.readBuffer(imageType, imageType, buffer.releaseNonNull());
+                    WTFLogAlways("xxoo Pasteboard::read reader.readBuffer success");
+                    return;
+                }
+            }
+        }
     }
 
     if (reader.shouldReadBuffer("image/png"_s)) {
